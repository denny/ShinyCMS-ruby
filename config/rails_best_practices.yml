# frozen_string_literal: true

# ShinyCMS ~ https://shinycms.org
#
# Copyright 2009-2020 Denny de la Haye ~ https://denny.me
#
# ShinyCMS is free software; you can redistribute it and/or modify it under the terms of the GPL (version 2 or later)

# Config file for Rails Best Practices gem
# https://github.com/flyerhzm/rails_best_practices#readme / https://rails-bestpractices.com

# Currently need to run this twice - once for main app and once for plugins -
# because some plugins are included in results of first run and others aren't
# rails_best_practices .
# rails_best_practices plugins -c config/rails_best_practices.yml


# Fail

#ProtectMassAssignmentCheck: { }                     # 0 / 15  # Only in plugins??
#ReplaceInstanceVariableWithLocalVariableCheck: { }  # 64
#SimplifyRenderInControllersCheck: { }               # 21 / 16
#SimplifyRenderInViewsCheck: { }                     # 40 / 33

# Everything this picks up is protected by both Devise and Pundit
# (via inheritance from main app's AdminController):
# before_action :authenticate_user!
# after_action :verify_authorized
#UseBeforeFilterCheck: { customize_count: 2 }  # 14 / 8


# Pass with some exceptions

# Ignored file contains a data migration, not seed data
IsolateSeedDataCheck: { ignored_files: 'db/migrate/20201004150130_change_comment_author_to_polymorphic\.rb' }

# Ignoring user capability checks in admin menus, and paginator partial checking page details
MoveCodeIntoModelCheck: { use_count: 2, ignored_files: [ 'app/views(/\w+)?/admin/menu/\w+\.html\.erb', 'app/views/admin/kaminari/_paginator\.html\.erb' ] }

# Exceptions are:
# - the method used to control access to Blazer (set in config/blazer.yml)
# - two methods that change default Devise behaviour
# - the endpoint that powers drag-to-sort for pages+sections in the admin area
# - a helper method in several admin controllers that triggers loading of the CKEditor JavaScript
# - a helper method in two admin controllers that overrides the section link in the breadcrumbs
RemoveUnusedMethodsInControllersCheck: { except_methods: [
  'ApplicationController#current_user_can_view_charts?',
  'MainController#after_sign_in_path_for',
  'RegistrationsController#after_update_path_for',
  'ShinyAccess::Admin::MembershipsController#breadcrumb_link_text_and_path',
  'ShinyBlog::Admin::BlogPostsController#load_html_editor?',
  'ShinyInserts::Admin::InsertsController#load_html_editor?',
  'ShinyLists::Admin::SubscriptionsController#breadcrumb_link_text_and_path',
  'ShinyNews::Admin::NewsPostsController#load_html_editor?',
  'ShinyPages::Admin::PagesController#load_html_editor?',
  'ShinyPages::Admin::PagesController#sort',
  'ShinyPages::Admin::TemplatesController#load_html_editor?'
] }

# First six used in templates, last four in mailers
RemoveUnusedMethodsInHelpersCheck: { except_methods: [
  'ShinyAccess::MainSiteHelper#current_user_can_access?',
  'ShinyAccess::MainSiteHelper#access_group_name',
  'ShinyForms::MainSiteHelper#find_form_by_slug',
  'ShinyInserts::MainSiteHelper#insert',
  'ShinyInserts::MainSiteHelper#insert_type?',
  'ShinyLists::MainSiteHelper#find_list_by_slug',
  'ShinyMailerHelper#add_view_paths',
  'ShinyMailerHelper#default_email',
  'ShinyMailerHelper#track_opens?',
  'ShinyMailerHelper#track_clicks?'
] }

# First two are aliases; next two override Devise behaviour; rest are in use, probably.
RemoveUnusedMethodsInModelsCheck: { except_methods: [
  'FeatureFlag#on',
  'FeatureFlag#off',
  'User#find_first_by_auth_conditions',
  'User#send_devise_notification',
  'ShinyForms::Form#action',
  'ShinyForms::Form#template_file_exists?',
  'ShinyForms::FormHandler#plain_email',
  'ShinyForms::FormHandler#store_in_database', # Okay, this one is a very stubby stub :)
  'ShinyForms::FormHandler#template_email',
  'ShinyNewsletters::Edition#items_in_same_month',
  'ShinyNewsletters::Send#send_at_time',
  'ShinyPages::Page#default_page?',
  'ShinyPages::Page#top_level_menu_items'
] }


# Pass

AddModelVirtualAttributeCheck: { }
AlwaysAddDbIndexCheck: { }
CheckSaveReturnValueCheck: { }
CheckDestroyReturnValueCheck: { }
DefaultScopeIsEvilCheck: { }
DryBundlerInCapistranoCheck: { }
HashSyntaxCheck: { }
KeepFindersOnTheirOwnModelCheck: { }
LawOfDemeterCheck: { }
MoveCodeIntoControllerCheck: { }
MoveCodeIntoHelperCheck: { array_count: 3 }
MoveFinderToNamedScopeCheck: { }
MoveModelLogicIntoModelCheck: { use_count: 4 }
NeedlessDeepNestingCheck: { nested_count: 2 }
NotRescueExceptionCheck: { }
NotUseDefaultRouteCheck: { }
NotUseTimeAgoInWordsCheck: { }
OveruseRouteCustomizationsCheck: { customize_count: 3 }
RemoveEmptyHelpersCheck: { }
RemoveTabCheck: { }
RemoveTrailingWhitespaceCheck: { }
ReplaceComplexCreationWithFactoryMethodCheck: { attribute_assignment_count: 2 }
RestrictAutoGeneratedRoutesCheck: { }
UseModelAssociationCheck: { }
UseMultipartAlternativeAsContentTypeOfEmailCheck: { }
UseParenthesesInMethodDefCheck: { }
UseObserverCheck: { }
UseQueryAttributeCheck: { }
UseSayWithTimeInMigrationsCheck: { }
UseScopeAccessCheck: { }
UseTurboSprocketsRails3Check: { }

# ShinyCMS ~ https://shinycms.org
#
# Copyright 2009-2021 Denny de la Haye ~ https://denny.me
#
# ShinyCMS is free software; you can redistribute it and/or modify it under the terms of the GPL (version 2 or later)

# Config file for Rails Best Practices gem
# https://github.com/flyerhzm/rails_best_practices#readme / https://rails-bestpractices.com

# Need to run this twice for some reason; output sometimes differs:
#   rails_best_practices -c plugins/ShinyCMS/config/rails_best_practices.yml .
#   rails_best_practices -c plugins/ShinyCMS/config/rails_best_practices.yml plugins


## Fail

#ReplaceInstanceVariableWithLocalVariableCheck: { }  # 64 / 63
#SimplifyRenderInControllersCheck: { }               # 21 / 21
#SimplifyRenderInViewsCheck: { }                     # 40 / 40

# Afaict, everything that this is complaining about is protected (due to
# inheriting from ShinyCMS::AdminController) by both Devise and Pundit:
#   before_action :authenticate_user!
#   after_action :verify_authorized
#UseBeforeFilterCheck: { customize_count: 2 }  # 20 / 20

# This hasn't been relevant since Rails 4 (released in 2015)
#ProtectMassAssignmentCheck: { }


## Pass, with some exceptions

# Ignored file contains a data migration, not seed data
IsolateSeedDataCheck: { ignored_files: 'db/migrate/20201004150130_change_comment_author_to_polymorphic\.rb' }

# FIXME: current_user.can? checks in stats admin menu are the only thing currently failing this
#MoveCodeIntoModelCheck: { use_count: 2 }
MoveCodeIntoModelCheck: { use_count: 3 }

# Exceptions are:
# - the `pagy_url_for` helper method in the ShinyCMS plugin's application controller
#   (which every plugin controller inherits from), that makes Pagy generate nicer URLs
# - the method used to control access to Blazer (set in config/blazer.yml)
# - the endpoint that implements the drag-to-sort feature for pages+sections in the admin area
# - two methods that change default Devise behaviour
# - the `breadcrumb_link_text_and_path` helper method (in 2 admin controllers) that overrides the section link in the admin area breadcrumbs
# - the `load_html_editor?` helper method (in 7 admin controllers) that triggers loading of the CKEditor JavaScript
RemoveUnusedMethodsInControllersCheck: { except_methods: [
  'ShinyCMS::ApplicationController#pagy_url_for',

  'ApplicationController#blazer_authorize',

  'ShinyPages::Admin::PagesController#sort',

  'ShinyCMS::MainController#after_sign_in_path_for',
  'ShinyCMS::Users::RegistrationsController#after_update_path_for',

  'ShinyAccess::Admin::MembershipsController#breadcrumb_link_text_and_path',
  'ShinyLists::Admin::SubscriptionsController#breadcrumb_link_text_and_path',

  'ShinyBlog::Admin::BlogPostsController#load_html_editor?',
  'ShinyInserts::Admin::InsertsController#load_html_editor?',
  'ShinyNews::Admin::NewsPostsController#load_html_editor?',
  'ShinyNewsletters::Admin::EditionsController#load_html_editor?',
  'ShinyNewsletters::Admin::TemplatesController#load_html_editor?',
  'ShinyPages::Admin::PagesController#load_html_editor?',
  'ShinyPages::Admin::TemplatesController#load_html_editor?'
] }

# Used in templates
RemoveUnusedMethodsInHelpersCheck: { except_methods: [
  'ShinyAccess::MainSiteHelper#current_user_can_access?',
  'ShinyAccess::MainSiteHelper#access_group_name',
  'ShinyForms::MainSiteHelper#find_form_by_slug',
  'ShinyInserts::MainSiteHelper#insert',
  'ShinyInserts::MainSiteHelper#insert_type?',
  'ShinyLists::MainSiteHelper#find_list_by_slug'
] }

# First two are aliases; next two override Devise behaviour; rest are in use, probably.
RemoveUnusedMethodsInModelsCheck: { except_methods: [
  'ShinyCMS::FeatureFlag#on',
  'ShinyCMS::FeatureFlag#off',
  'ShinyCMS::User#find_first_by_auth_conditions',
  'ShinyCMS::User#send_devise_notification',
  'ShinyForms::Form#action',
  'ShinyForms::Form#template_file_exists?',
  'ShinyForms::FormHandler#plain_email',
  'ShinyForms::FormHandler#send_html_email',
  'ShinyForms::FormHandler#store_in_database', # Okay, this one is a very stubby stub :)
  'ShinyNewsletters::Edition#items_in_same_month',
  'ShinyNewsletters::Send#send_at_time',
  'ShinyPages::Page#default_page?',
  'ShinyPages::Page#sitemap_items',
  'ShinyPages::Page#top_level_menu_items',
  'ShinyProfiles::Profile#sitemap_items'
] }


## Pass

AddModelVirtualAttributeCheck: { }
AlwaysAddDbIndexCheck: { }
CheckSaveReturnValueCheck: { }
CheckDestroyReturnValueCheck: { }
DefaultScopeIsEvilCheck: { }
DryBundlerInCapistranoCheck: { }
HashSyntaxCheck: { }
KeepFindersOnTheirOwnModelCheck: { }
LawOfDemeterCheck: { }
MoveCodeIntoControllerCheck: { }
MoveCodeIntoHelperCheck: { array_count: 3 }
MoveFinderToNamedScopeCheck: { }
MoveModelLogicIntoModelCheck: { use_count: 4 }
NeedlessDeepNestingCheck: { nested_count: 2 }
NotRescueExceptionCheck: { }
NotUseDefaultRouteCheck: { }
NotUseTimeAgoInWordsCheck: { }
OveruseRouteCustomizationsCheck: { customize_count: 3 }
RemoveEmptyHelpersCheck: { }
RemoveTabCheck: { }
RemoveTrailingWhitespaceCheck: { }
ReplaceComplexCreationWithFactoryMethodCheck: { attribute_assignment_count: 2 }
RestrictAutoGeneratedRoutesCheck: { }
UseModelAssociationCheck: { }
UseMultipartAlternativeAsContentTypeOfEmailCheck: { }
UseParenthesesInMethodDefCheck: { }
UseObserverCheck: { }
UseQueryAttributeCheck: { }
UseSayWithTimeInMigrationsCheck: { }
UseScopeAccessCheck: { }
UseTurboSprocketsRails3Check: { }

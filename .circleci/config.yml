# CircleCI config, for https://circleci.com/gh/denny/ShinyCMS-ruby

version: 2

references:
  app: &app
    image: circleci/ruby:2.7.1-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: ~/ShinyCMS/vendor/bundle
      DATABASE_URL: postgres://shinyuser:shinypass@127.0.0.1:5432/shinycms_test
      NODE_ENV: test
      RAILS_ENV: test
      SHINYCMS_THEME: TEST
  db: &db
    image: circleci/postgres:10-alpine-ram
    environment:
      POSTGRES_USER: shinyuser
      POSTGRES_PASSWORD: shinypass
      POSTGRES_DB: shinycms_test

jobs:
  build:
  # Setup phase
  # setup:
    docker:
      - *app
      - *db

    working_directory: ~/ShinyCMS

    steps:
      - checkout

      # Restore Ruby dependencies from cache, or install them
      - run:
          name: Install Bundler
          command: gem install bundler
      - restore_cache:
          keys:
          - bundler-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gems
          command: bundle check || bundle install
      - save_cache:
          key: bundler-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/ShinyCMS/vendor/bundle

      # Restore Node dependencies from cache, or install them
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Node modules
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Restore Webpacker assets from cache, or compile them
      - restore_cache:
          keys:
            - webpacker-cache-{{ .Revision }}
      # run: bundle exec rails assets:precompile
      - run:
          name: Compile webpacker assets
          command: bundle exec rake webpacker:compile
      - save_cache:
          key: webpacker-cache-{{ .Revision }}
          paths:
            - ~/ShinyCMS/public/packs-test/

  # Testing phase
#  test:
#    docker:
#      - *app
#      - *db
#
#    working_directory: ~/ShinyCMS
#    parallelism: 4
#
#    steps:
#      - checkout
#
#      - restore_cache:
#          keys:
#          - bundler-cache-{{ checksum "Gemfile.lock" }}
#          - bundler-cache-
#      - restore_cache:
#          keys:
#            - yarn-cache-{{ checksum "yarn.lock" }}
#            - yarn-cache-
#      - restore_cache:
#          keys:
#            - webpacker-cache-{{ .Revision }}
#            - webpacker-cache-
#
#      # Install bundler (again?) and double-check the gems are all there
#      - run:
#          name: Install bundler
#          command: |
#            gem install bundler
#            bundle check || bundle install

      # Install MJML binary
      - run:
          name: Install MJML
          command: npm install mjml

      # Database setup
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Load database schema
          command: bundle exec rails db:schema:load

      # Run tests!
      - run:
          name: Run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES=$( circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings )
            bundle exec rspec $TEST_FILES \
              --profile 10 \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress

      # Store test results for CodeCov
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

#workflows:
#  version: 2
#  setup_and_test:
#    jobs:
#      - setup
#      - test:
#          requires:
#            - setup

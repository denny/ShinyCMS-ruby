require: rubocop-rails

# There's no point in having Rubocop look at JavaScript, images, shell scripts, etc.
# Also, rubocop really does not like the code generated by Rails and ActiveRecord.
AllCops:
  EnabledByDefault: true
  Exclude:
    - app/assets/**/*
    - bin/*
    - coverage/**/*
    - db/schema.rb
    - db/migrate/*.rb
    - docs/*
    - lib/generators/*/plugin/plugin_generator.rb
    - log/*
    - node_modules/**/*
    - plugins/*/db/migrate/*.rb
    - public/**/*
    - tmp/**/*
    - tools/**/*

# This breaks CI tests that run against older versions
Gemspec/RequiredRubyVersion:
  Enabled: false

# Disabling cops for a few lines here and there is handy
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false

# These are allowed and expected to contain long blocks
Metrics/BlockLength:
  Exclude:
    - Gemfile
    - spec/**/*.rb
    - config/routes.rb
    - config/environments/*
    - lib/tasks/*.rake
    - app/models/concerns/*.rb
    - plugins/*/spec/**/*.rb

# Don't need to explain namespacing of plugin specs
Style/Documentation:
  Exclude:
    - plugins/*/spec/**/*.rb

# Spec files with I18n.t calls in them are more readable with slightly long lines
# than they would be with lots of split lines. (And long data is long, I guess.)
Layout/LineLength:
  Exclude:
    - spec/**/*.rb
    - db/demo_data.rb

# This test is for a feature involving a list of IP addresses
Style/IpAddresses:
  Exclude:
    - spec/requests/admin_spec.rb

# This code is intentionally and helpfully rewriting a bit of HTML
Rails/OutputSafety:
  Exclude:
    - config/initializers/field_with_errors.rb

# Whitespace Considered Helpful
Layout/ExtraSpacing:
  Enabled: false
Layout/SpaceAroundBlockParameters:
  Enabled: false
Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: false
Layout/SpaceInsideBlockBraces:
  Enabled: false
Layout/SpaceInsideHashLiteralBraces:
  Enabled: false
Layout/SpaceInsideParens:
  Enabled: false
Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: false
Layout/SpaceInsideReferenceBrackets:
  Enabled: false

# Allow compact class names (e.g. Admin::Pages::TemplatesController)
Style/ClassAndModuleChildren:
  Enabled: false

# I'd rather use one style of regex everywhere, that is clearer for munging URLs
# as no need to escape '/': %r{/(path)/parts/} rather than /\/(path)\/parts\//
Style/RegexpLiteral:
  Enabled: false

# TODO: see if I can make this method happy at some point
Metrics/AbcSize:
  Exclude:
    - app/helpers/admin_area_helper.rb

# Some of these might be fixable
Style/FrozenStringLiteralComment:
  Exclude:
    - db/demo_data.rb
Style/StringLiterals:
  Exclude:
    - db/demo_data.rb
Layout/FirstArrayElementIndentation:
  Exclude:
    - db/demo_data.rb
Layout/LeadingEmptyLines:
  Exclude:
    - db/demo_data.rb

Rails/Output:
  Exclude:
    - db/seeds.rb
Rails/SaveBang:
  Exclude:
    - db/seeds.rb

# ... nah
Bundler/GemComment:
  Enabled: false
Layout/MultilineMethodArgumentLineBreaks:
  Enabled: false
Lint/ConstantResolution:
  Enabled: false
Lint/NumberConversion:
  Enabled: false
Style/Copyright:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Style/InlineComment:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MissingElse:
  Enabled: false
Style/StringHashKeys:
  Enabled: false
